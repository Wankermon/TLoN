import sys
import os
import random
import pickle
import math
import time




Weapons = {'Sword':40,
           'Dagger':30,
           'Axe':100,
           'Kusanagi':450,
           'Flame Talon':200,
           'Dragmoore':300,
           'Kitetsu':900,
           'Kikoku':800,
           'God Slayer':999999,
           }


Gift = {'Awehfoweoiflhwooi':0,
        'Death':0,
        'Life':0,
        'Uhereurfgi iuo':0,
        'Gyeuirtiebrbyv':0,
        'Mjölnir':0,
        }
        
 
 
Items = {"Potions":30}
 

class world:
    def __init__(self, name):
        self.name = name

 
 
class Player:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.base_attack = 10
        self.base_defence = 0
        self.gold = 100        
        self.pot = 2
        self.armour = [" "]
        self.weapon = ["Rusty Sword"]
        self.curweap = ["Rusty Sword"]
        self.lvl = 1
        self.xp = 0
 
       
 
    @property
    def attack(self):
        attack = self.base_attack
        if self.curweap == 'Rusty Sword':
            attack += 5
 
        if self.curweap == 'Sword':
            attack += 15
 
        if self.curweap == 'Axe':
            attack += 20

        if self.curweap == "Flame Talon":
            attack += 50
 
        if self.curweap == "Kusanagi":
            attack += 100

        if self.curweap == "Dragmoore":
            attack += 4000

        if self.curweap == "Kikoku":
            attack += 5000

        if self.curweap == "Kitetsu":
            attack += 9000

        if self.curweap == "God Slayer":
            attack += 99999

        if self.curweap == "Awehfoweoiflhwooi":
            attack += 73482

        if self.curweap == "Death":
            attack += 387923

        if self.curweap == "Life":
            attack += 372383

        if self.curweap == "Mjölnir":
            attack += 91040038

        if self.curweap == "Uhereurfgi iuo":
            attack += 100000000

        if self.curweap == "Gyeuirtiebrbyv":
            attack += 80840182
 
        return attack



       
 
       
class Goblin:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 50
        self.health = self.maxhealth
        self.attack = 100
        self.goldgain = 15
        self.drop = 1
        self.exp = 10
GoblinIG = Goblin("Goblin")

class GoldPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.attack = 1
        self.goldgain = 10000
        self.drop = 0
        self.exp = 100
GoldPigIG = GoldPig("Gold Pig")

class Satyr:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.attack = 1500
        self.goldgain = 20
        self.drop = 5
        self.exp = 100
SatyrIG = Satyr("Satyr")

class Pig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 20
        self.health = self.maxhealth
        self.attack =100
        self.goldgain = 5
        self.drop = 1
        self.exp = 1
PigIG = Pig("Pig")

class RoastedPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 15
        self.health = self.maxhealth
        self.attack = 300
        self.goldgain = 0
        self.drop = 5
        self.exp = 1
RoastedPigIG = RoastedPig("RoastedPig")

class Imp:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500
        self.health = self.maxhealth
        self.attack = 200
        self.goldgain = 20
        self.drop = 5
        self.exp = 20
ImpIG = Imp("Imp")

class FlyingPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 2000
        self.health = self.maxhealth
        self.attack = 50
        self.goldgain = 10
        self.drop = 5
        self.exp = 10
FlyingPigIG = FlyingPig("FlyingPig")
 
class Zombie:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500
        self.health = self.maxhealth
        self.attack = 100
        self.goldgain = 10
        self.drop = 3
        self.exp = 20
ZombieIG = Zombie("Zombie")
 
class Dragon:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 30000
        self.health = self.maxhealth
        self.attack = 3000
        self.goldgain = 90
        self.drop = 5
        self.exp = 5000
DragonIG = Dragon("Dragon")
 
class Golem:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 200000
        self.health = self.maxhealth
        self.attack = 2000
        self.goldgain = 70
        self.drop = 2
        self.exp = 900
GolemIG = Golem("Golem")
 
class Troll:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 4000
        self.health = self.maxhealth
        self.attack = 250
        self.goldgain = 100
        self.drop = 0
        self.exp = 100
TrollIG = Troll("Troll")
 
class Wolf:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 200
        self.health = self.maxhealth
        self.attack = 150
        self.goldgain = 10
        self.drop = 3
        self.exp = 10
WolfIG = Wolf("Wolf")

class FlyingWolf:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 1000
        self.health = self.maxhealth
        self.attack = 300
        self.goldgain = 10
        self.drop = 5
        self.exp = 10
FlyingWolfIG = FlyingWolf("FlyingWolf")
 
class Phoenix:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 2000000
        self.health = self.maxhealth
        self.attack = 30000
        self.goldgain = 100
        self.drop = 5
        self.exp = 6000
PhoenixIG = Phoenix("Phoenix")

class God:
    def __init__(self, name):
        self.name = name
        
        self.maxhealth = 99999999999999
        self.health = self.maxhealth
        self.attack = 10000000000000000000000000000000000000000000000000000000000000
        self.goldgain = 1000000
        self.drop = 20000
        self.exp = 1000000
GodIG = God("God")

class Pan:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500000000
        self.health = self.maxhealth
        self.attack = 50000
        self.goldgain = 200
        self.drop = 30
        self.exp = 1000
PanIG = Pan("Pan")

class Golgoth:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 1000000
        self.health = self.maxhealth
        self.attack = 5000000
        self.goldgain = 100
        self.drop = 10
        self.exp = 10000
GolgothIG = Golgoth("Golgoth")

class Fiend:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 30000000000000000000000000000000
        self.health = self.maxhealth
        self.attack = 40000000
        self.goldgain = 200
        self.drop = 20
        self.exp = 10000
FiendIG = Fiend("Fiend")
 
 
def main():
    print("Welcome to The Legend of Noobkid\n")
    print("1. Start")
    print("2. Load")
    print("3. Exit")
 
    option = input("\n-> ")
 
    if option == '1':
        start()
 
    elif option == '2':
        if os.path.exists("savefile") == True:
            with open('savefile', 'rb') as f:
                global PlayerIG
                PlayerIG = pickle.load(f)
            print("Loaded saved state...")
            option = input(' ')
            start1()
        else:
            print("You have no saved file for this Game.")
            option = input(' ')
            main()
           
 
    elif option == '3':
        sys.exit()
 
    elif option == 'dev':
        dev()
 
    else:
        main()
 
def start():
    print("Hello what is your name?")
 
    option1 = input("> ")
    global PlayerIG
    PlayerIG = Player(option1)
    start0()


def start0():
    print("Welcome to the horrible world filled with overpowered monsters and noob equiptment")
    print("(Sigh... Another fool has decended)")
    print("What would you like to name this world?")

    option = input("> ")
    global worldIG
    worldIG = world(option)
    start1()

 
def start1():
 
    uplvl()
    print("Name: %s" % PlayerIG.name)
    print("World: %s" % worldIG.name)
    print("Attack: %d" % PlayerIG.attack)
    print("Current Weapons: %s" % PlayerIG.curweap)
    print("Health: %i/%i" % (PlayerIG.health, PlayerIG.maxhealth))
    print("Gold: %d" % PlayerIG.gold)
    print("Potions: %d" % PlayerIG.pot)
    print("Level: %i" % PlayerIG.lvl)
    print("Experience: %i" % PlayerIG.xp)
    print("\n1. Fight")
    print("2. Town")
    print("3. Inventory")
    print("4. Save")
    print("5. Dungeon")
    print("6. Exit")
 
    option2 = input("> ")
 
    if option2 == '1':
        prefight()
    elif option2 == '2':
        town()
    elif option2 == '3':
        inventory()
 
 
    elif option2 == '4':
        with open('savefile', 'wb') as f:
            pickle.dump(PlayerIG, f)
            print("\nGame has been Saved!\n")
        option = input(' ')
        start1()
    elif option2 == '5':
        dungeon()
           
   
    elif option2 == '6':
        with open('savefile', 'wb') as f:
            pickle.dump(PlayerIG, f)
            print("\nGame has been Saved!\n")
            print("HAH! No redos")
        option = input(' ')
        exitt()


    elif option2 == '01101000 01100001 01100011 01101011':
        stuff()
    

    else:
        start1()


def stuff():
    print("How did you find this....?")
    option = input(' ')
    print("Well its too late now...")
    option = input(' ')
    print("Here I'll give you this. Type Awehfoweoiflhwooi. Just leave me alone okay?")
    option = input('> ')

    if option == 'ok':
        if PlayerIG.gold >= Gift[option]:
                PlayerIG.gold -= Gift[option]
                PlayerIG.weapon.append(option)
                print("You recieved %s" % option)
                option = input(' ')
                start1()

    elif option == 'no':
        print("What? Why?...")
        option = input(' ')
        print("Your evil... :'(")
        option = input(' ')
        print("Just take whatever you want and leave me alone TToTT")
        option = input('> ')
        if PlayerIG.gold >= Gift[option]:
                PlayerIG.gold -= Gift[option]
                PlayerIG.weapon.append(option)
                print("You took %s" % option)
                option = input(' ')
                start1()
        


def exitt():
    print("Exit?")
    print("Yes")
    print("No")
    option = input("> ")

    if option == 'yes':
        sys.exit()

    elif option == 'no':
        start1()
 
def inventory():
    print("What would you like to do?")
    print("\n1. Equip Weapons")
    print("2. Drink Potions")
    print("\nBack")
    option = input("> ")
 
    if option == '1':
        equip()
 
    elif option == '2':
        if PlayerIG.pot == 0:
            print("You don't have any potions left")      
        else:
            PlayerIG.health += 20
            if PlayerIG.health > PlayerIG.maxhealth:
                PlayerIG.health = PlayerIG.maxhealth
            PlayerIG.pot -= 1
            print("You drank a potion")
            print("Tastes worse every sip you take")
        option = input(' ')
        inventory()
       
       
 
   
    elif option == 'back':
        start1()

    else:
        inventory()
 
 
def equip():
    print("You are currently equipped with %s." % PlayerIG.curweap)
    print("What do you want to equip?\n")
    for weapon in PlayerIG.weapon:
        print(weapon)
    print("Enter b to go back.")
    option = input("> ")
    if option == PlayerIG.curweap:
        print("You have already equipped that item")
        option = input(' ')
        equip()
    elif option == 'b':
        inventory()
    elif option in PlayerIG.weapon:
        PlayerIG.curweap = option
        print("You have equipped %s." %option)
        option = input(' ')
        equip()
    else:
        print("You do not own %s." % option)
        equip()
       
       
   
   
   
       
       
   
   
       
def prefight():
    global enemy
 
    enemy = random.choice((PigIG, ZombieIG, GoblinIG, DragonIG, GoldPigIG))
       
       
    fight()
 
def fight():
    print("%s  VS  %s" % (PlayerIG.name, enemy.name))
    print("%s's Health: %d/%d" % (PlayerIG.name, PlayerIG.health, PlayerIG.maxhealth))
    print("%s's Health: %i/%i" % (enemy.name, enemy.health, enemy.maxhealth))
    print("Potions: %i\n" % PlayerIG.pot)    
    print("1. Attack")
    print("2. Potion")
    print("3. Run")
    option = input("> ")
 
    if option == '1':
        attack()
    elif option == '2':
        drinkpot()
    elif option == '3':
        run()
    else:
        fight()
       
def attack():
    Pattack = random.randint(0, PlayerIG.attack)
    Eattack = random.randint(0, enemy.attack)
    if Pattack == (PlayerIG.attack /2):
        print("You missed!")
        print("HAHAHAHAHAHAHAHAHAHA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
    else:
        enemy.health -= Pattack
        print("You dealt %i damage!" % Pattack)    
    option = input(' ')
    if enemy.health <= 0:
        win()
   
    if Eattack == (enemy.attack /2):
        print("The enemy missed!")
    else:
        PlayerIG.health -= Eattack
        print("The enemy dealt %i damage!" % Eattack)
    option = input(' ')
    if PlayerIG.health <= 0:
        die()
    else:
        fight()
       
       
       
import sys
import os
import random
import pickle
import math
import time




Weapons = {'Sword':40,
           'Dagger':30,
           'Axe':100,
           'Kusanagi':450,
           'Flame Talon':200,
           'Dragmoore':300,
           'Kitetsu':900,
           'Kikoku':800,
           'God Slayer':999999,
           }


Gift = {'Awehfoweoiflhwooi':0,
        'Death':0,
        'Life':0,
        'Uhereurfgi iuo':0,
        'Gyeuirtiebrbyv':0,
        'Mjölnir':0,
        }
        
 
 
Items = {"Potions":30}
 

class world:
    def __init__(self, name):
        self.name = name

 
 
class Player:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.base_attack = 10
        self.base_defence = 0
        self.gold = 100        
        self.pot = 2
        self.armour = [" "]
        self.weapon = ["Rusty Sword"]
        self.curweap = ["Rusty Sword"]
        self.lvl = 1
        self.xp = 0
 
       
 
    @property
    def attack(self):
        attack = self.base_attack
        if self.curweap == 'Rusty Sword':
            attack += 5
 
        if self.curweap == 'Sword':
            attack += 15
 
        if self.curweap == 'Axe':
            attack += 20

        if self.curweap == "Flame Talon":
            attack += 50
 
        if self.curweap == "Kusanagi":
            attack += 100

        if self.curweap == "Dragmoore":
            attack += 4000

        if self.curweap == "Kikoku":
            attack += 5000

        if self.curweap == "Kitetsu":
            attack += 9000

        if self.curweap == "God Slayer":
            attack += 99999

        if self.curweap == "Awehfoweoiflhwooi":
            attack += 73482

        if self.curweap == "Death":
            attack += 387923

        if self.curweap == "Life":
            attack += 372383

        if self.curweap == "Mjölnir":
            attack += 91040038

        if self.curweap == "Uhereurfgi iuo":
            attack += 100000000

        if self.curweap == "Gyeuirtiebrbyv":
            attack += 80840182
 
        return attack



       
 
       
class Goblin:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 50
        self.health = self.maxhealth
        self.attack = 100
        self.goldgain = 15
        self.drop = 1
        self.exp = 10
GoblinIG = Goblin("Goblin")

class GoldPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.attack = 1
        self.goldgain = 10000
        self.drop = 0
        self.exp = 100
GoldPigIG = GoldPig("Gold Pig")

class Satyr:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 100
        self.health = self.maxhealth
        self.attack = 1500
        self.goldgain = 20
        self.drop = 5
        self.exp = 100
SatyrIG = Satyr("Satyr")

class Pig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 20
        self.health = self.maxhealth
        self.attack =100
        self.goldgain = 5
        self.drop = 1
        self.exp = 1
PigIG = Pig("Pig")

class RoastedPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 15
        self.health = self.maxhealth
        self.attack = 300
        self.goldgain = 0
        self.drop = 5
        self.exp = 1
RoastedPigIG = RoastedPig("RoastedPig")

class Imp:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500
        self.health = self.maxhealth
        self.attack = 200
        self.goldgain = 20
        self.drop = 5
        self.exp = 20
ImpIG = Imp("Imp")

class FlyingPig:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 2000
        self.health = self.maxhealth
        self.attack = 50
        self.goldgain = 10
        self.drop = 5
        self.exp = 10
FlyingPigIG = FlyingPig("FlyingPig")
 
class Zombie:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500
        self.health = self.maxhealth
        self.attack = 100
        self.goldgain = 10
        self.drop = 3
        self.exp = 20
ZombieIG = Zombie("Zombie")
 
class Dragon:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 30000
        self.health = self.maxhealth
        self.attack = 3000
        self.goldgain = 90
        self.drop = 5
        self.exp = 5000
DragonIG = Dragon("Dragon")
 
class Golem:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 200000
        self.health = self.maxhealth
        self.attack = 2000
        self.goldgain = 70
        self.drop = 2
        self.exp = 900
GolemIG = Golem("Golem")
 
class Troll:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 4000
        self.health = self.maxhealth
        self.attack = 250
        self.goldgain = 100
        self.drop = 0
        self.exp = 100
TrollIG = Troll("Troll")
 
class Wolf:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 200
        self.health = self.maxhealth
        self.attack = 150
        self.goldgain = 10
        self.drop = 3
        self.exp = 10
WolfIG = Wolf("Wolf")

class FlyingWolf:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 1000
        self.health = self.maxhealth
        self.attack = 300
        self.goldgain = 10
        self.drop = 5
        self.exp = 10
FlyingWolfIG = FlyingWolf("FlyingWolf")
 
class Phoenix:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 2000000
        self.health = self.maxhealth
        self.attack = 30000
        self.goldgain = 100
        self.drop = 5
        self.exp = 6000
PhoenixIG = Phoenix("Phoenix")

class God:
    def __init__(self, name):
        self.name = name
        
        self.maxhealth = 99999999999999
        self.health = self.maxhealth
        self.attack = 10000000000000000000000000000000000000000000000000000000000000
        self.goldgain = 1000000
        self.drop = 20000
        self.exp = 1000000
GodIG = God("God")

class Pan:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 500000000
        self.health = self.maxhealth
        self.attack = 50000
        self.goldgain = 200
        self.drop = 30
        self.exp = 1000
PanIG = Pan("Pan")

class Golgoth:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 1000000
        self.health = self.maxhealth
        self.attack = 5000000
        self.goldgain = 100
        self.drop = 10
        self.exp = 10000
GolgothIG = Golgoth("Golgoth")

class Fiend:
    def __init__(self, name):
        self.name = name
        self.maxhealth = 30000000000000000000000000000000
        self.health = self.maxhealth
        self.attack = 40000000
        self.goldgain = 200
        self.drop = 20
        self.exp = 10000
FiendIG = Fiend("Fiend")
 
 
def main():
    print("Welcome to The Legend of Noobkid\n")
    print("1. Start")
    print("2. Load")
    print("3. Exit")
 
    option = input("\n-> ")
 
    if option == '1':
        start()
 
    elif option == '2':
        if os.path.exists("savefile") == True:
            with open('savefile', 'rb') as f:
                global PlayerIG
                PlayerIG = pickle.load(f)
            print("Loaded saved state...")
            option = input(' ')
            start1()
        else:
            print("You have no saved file for this Game.")
            option = input(' ')
            main()
           
 
    elif option == '3':
        sys.exit()
 
    elif option == 'dev':
        dev()
 
    else:
        main()
 
def start():
    print("Hello what is your name?")
 
    option1 = input("> ")
    global PlayerIG
    PlayerIG = Player(option1)
    start0()


def start0():
    print("Welcome to the horrible world filled with overpowered monsters and noob equiptment")
    print("(Sigh... Another fool has decended)")
    print("What would you like to name this world?")

    option = input("> ")
    global worldIG
    worldIG = world(option)
    start1()

 
def start1():
 
    uplvl()
    print("Name: %s" % PlayerIG.name)
    print("World: %s" % worldIG.name)
    print("Attack: %d" % PlayerIG.attack)
    print("Current Weapons: %s" % PlayerIG.curweap)
    print("Health: %i/%i" % (PlayerIG.health, PlayerIG.maxhealth))
    print("Gold: %d" % PlayerIG.gold)
    print("Potions: %d" % PlayerIG.pot)
    print("Level: %i" % PlayerIG.lvl)
    print("Experience: %i" % PlayerIG.xp)
    print("\n1. Fight")
    print("2. Town")
    print("3. Inventory")
    print("4. Save")
    print("5. Dungeon")
    print("6. Exit")
 
    option2 = input("> ")
 
    if option2 == '1':
        prefight()
    elif option2 == '2':
        town()
    elif option2 == '3':
        inventory()
 
 
    elif option2 == '4':
        with open('savefile', 'wb') as f:
            pickle.dump(PlayerIG, f)
            print("\nGame has been Saved!\n")
        option = input(' ')
        start1()
    elif option2 == '5':
        dungeon()
           
   
    elif option2 == '6':
        with open('savefile', 'wb') as f:
            pickle.dump(PlayerIG, f)
            print("\nGame has been Saved!\n")
            print("HAH! No redos")
        option = input(' ')
        exitt()


    elif option2 == '01101000 01100001 01100011 01101011':
        stuff()
    

    else:
        start1()


def stuff():
    print("How did you find this....?")
    option = input(' ')
    print("Well its too late now...")
    option = input(' ')
    print("Here I'll give you this. Type Awehfoweoiflhwooi. Just leave me alone okay?")
    option = input('> ')

    if option == 'ok':
        if PlayerIG.gold >= Gift[option]:
                PlayerIG.gold -= Gift[option]
                PlayerIG.weapon.append(option)
                print("You recieved %s" % option)
                option = input(' ')
                start1()

    elif option == 'no':
        print("What? Why?...")
        option = input(' ')
        print("Your evil... :'(")
        option = input(' ')
        print("Just take whatever you want and leave me alone TToTT")
        option = input('> ')
        if PlayerIG.gold >= Gift[option]:
                PlayerIG.gold -= Gift[option]
                PlayerIG.weapon.append(option)
                print("You took %s" % option)
                option = input(' ')
                start1()
        


def exitt():
    print("Exit?")
    print("Yes")
    print("No")
    option = input("> ")

    if option == 'yes':
        sys.exit()

    elif option == 'no':
        start1()
 
def inventory():
    print("What would you like to do?")
    print("\n1. Equip Weapons")
    print("2. Drink Potions")
    print("\nBack")
    option = input("> ")
 
    if option == '1':
        equip()
 
    elif option == '2':
        if PlayerIG.pot == 0:
            print("You don't have any potions left")      
        else:
            PlayerIG.health += 20
            if PlayerIG.health > PlayerIG.maxhealth:
                PlayerIG.health = PlayerIG.maxhealth
            PlayerIG.pot -= 1
            print("You drank a potion")
            print("Tastes worse every sip you take")
        option = input(' ')
        inventory()
       
       
 
   
    elif option == 'back':
        start1()

    else:
        inventory()
 
 
def equip():
    print("You are currently equipped with %s." % PlayerIG.curweap)
    print("What do you want to equip?\n")
    for weapon in PlayerIG.weapon:
        print(weapon)
    print("Enter b to go back.")
    option = input("> ")
    if option == PlayerIG.curweap:
        print("You have already equipped that item")
        option = input(' ')
        equip()
    elif option == 'b':
        inventory()
    elif option in PlayerIG.weapon:
        PlayerIG.curweap = option
        print("You have equipped %s." %option)
        option = input(' ')
        equip()
    else:
        print("You do not own %s." % option)
def win():    
    enemy.health = enemy.maxhealth
    PlayerIG.gold += enemy.goldgain
    PlayerIG.pot += enemy.drop
    PlayerIG.xp += enemy.exp
    uplvl()
    option = input(' ')
    print("You have Successfully defeated %s!" % enemy.name)
    print("You have found %i gold " % enemy.goldgain)
    print("%s dropped %i potions for you!" % (enemy.name, enemy.drop))
    option = input(' ')
    start1()
       
   
 
def die():
    PlayerIG.health = PlayerIG.maxhealth
    enemy.health = enemy.maxhealth
    PlayerIG.gold -= enemy.goldgain
    print("You Died!")
    print("%s loots your corpse..." % enemy.name)
    print("WAHAHAHAHAHAHAHAHAHAHAHAHAHAHA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
    print("You lost %i gold" % enemy.goldgain)
    print("SUCKS TO BE YOU!!!")
    option = input(' ')
    start1()
   
   
 
 
def drinkpot():
    if PlayerIG.pot == 0:
        print("You don't have any potions left")      
    else:
        PlayerIG.health += 20
        if PlayerIG.health > PlayerIG.maxhealth:
            PlayerIG.health = PlayerIG.maxhealth
        PlayerIG.pot -= 1
        print("You drank a potion")
        print("Tastes horrible...")
    option = input(' ')
    fight()
   
       
   
 
def run():
    runnum = random.randint(1, 3)
    if runnum == 1:
        print("You have Successfully ran away!")
        option = input(' ')
        start1()
    else:
        print("You failed to get away!")
        option = input(' ')
        Eattack = random.randint(0, enemy.attack)
        if Eattack <= 0:
            print("The enemy missed!")
        else:
            PlayerIG.health -= Eattack
            print("The enemy dealt %i damage!" % Eattack)
        option = input(' ')
        if PlayerIG.health <= 0:
            die()
        else:
            fight()
 
##Price List:
#           Sword = 40 Goldz
#           Dagger = 30 Golds
#           Axe = 100 Gold
#           Potions = 25 Gold
 

def town():
    print("Welcome to ------!")
    print("1. Shop")
    #print("2. Forge")
    #print("3. Mines")
    print("Back")
    option = input("> ")
    if option in '1':
        shop()


def shop():
    print("Welcome to Gary's Hob!")
    print("You have %i Gold!" % PlayerIG.gold)
    print("\nWhat would you like to buy?\n")
    print("1. Weapons")
    #print("2. Armour")
    print("3. Potions")
    print("Back")
    option = input("> ")
    if option in '1':
        print("Welcome to the Weaponary!")
        print("You currently have %i Gold." % PlayerIG.gold)
        print("What would you like to buy?\n")
        print("1. Sword (40 Gold)")
        print("2. Dagger (30 Gold)")
        print("3. Axe (100 Gold)")
        print("4. Flame Talon (200 Gold)")
        print("5. Dragmoore (300 Gold)")
        print("5. Kusanagi (450 Gold)")
        print("6. Kikoku (800 Gold)")
        print("7. Kitetsu (900 Gold)")
        print("5. God Slayer (999999 Gold)")
        print("Back")
        option = input("> ")
        if option in Weapons:
            if PlayerIG.gold >= Weapons[option]:
                PlayerIG.gold -= Weapons[option]
                PlayerIG.weapon.append(option)
                print("You have successfully purchased %s" % option)
                option = input(' ')
                shop()
 
            else:
                print("You don't have enough Gold!")
                option = input(' ')
                shop()
   
        elif option == 'back':
            print("Thank you!")
            option = input(' ')
            shop()
 
        else:
            print("This item does not Exist!")
            option = input(' ')
            shop()

    elif option in '2':
        print("Welcome to the Armoury")
        print("What would you like to buy? \n")
        print("1. Leather Cap (10 Gold)")
        print("Back")
        option = input("> ")
        if option in Armour:
            if PlayerIG.gold >= Armour[option]:
                PlayerIG.gold -= Armour[option]
                PlayerIG.armour.append(option)
                print("You have successfully purchased %s" % option)
                option = input(' ')
                shop()
                
            else:
                print("You don't have enough Gold!")
                option = input(' ')
                shop()
            
            
    elif option in '3':
        print("Welcome to Items Shop")
        print("What would you like to buy? \n")
        print("1. Potions (30 Gold)")
        print("back")
        option = input("> ")
        if option in Items:
            if PlayerIG.gold >= Items[option]:
                PlayerIG.gold -= Items[option]
                PlayerIG.pot += 1
               
                print("You have successfully purchased %s" % option)
                option = input(' ')
                shop()
               
            else:
                print("You don't have enough Gold!")
                option = input(' ')
                shop()
        elif option == 'back':
            print("Thank you!")
            option = input(' ')
            shop()
        else:
            print("This item does not Exist!")
            option = input(' ')
            shop()
           
           
    elif option == 'back':
        print("Thank You for Shopping with us!")
        option = input(' ')
        start1()
 
 
    else:
       
        return shop()
       
           
       
 
 
   
 
 
def stats():
    print("Current saved progress:")
    print("Name: %s" % PlayerIG.name)
    print("Attack: %d" % PlayerIG.attack)
    print("Current Weapon: %s" % PlayerIG.curweap)
    print("Health: %i/%i" % (PlayerIG.health, PlayerIG.maxhealth))
    print("Gold: %d" % PlayerIG.gold)
    print("Potions: %d\n" % PlayerIG.pot)
 
 
 
 
def dev():
    if os.path.exists("savefile") == True:
            with open('savefile', 'rb') as f:
                global PlayerIG
                PlayerIG = pickle.load(f)
            print("Loaded saved state...")
            option = input(' ')
            stats()
            print("Press Enter to Exit.")
            option = input(' ')
            main()
    else:
        print("There is no saved file please create a new one.")
        print("Press Enter to exit.")
        option = input(' ')
        main()


def dungeon():
    if PlayerIG.lvl <= 29:
        
        print("You are not of strong enough. Return after reaching level 30")
        option = input(" ")
        start1()

    else:
        dungeon1()

           
def dungeon1():
    print("Welcome to Dungeon mode!")
    option = input(' ')
    print("Be prepared to DIE!")
    option = input(' ')
    print("Choose your Mode!")
    print("1. ICE")
    print("2. FIRE")
    print("3. EARTH")
    print("4. HEAVENLY TOWER")
    print("5. back")
    option = input("> ")
 
    if option == '1':
        ice()
    elif option == '2':
        fire()
    elif option == '3':
        earth()
    elif option == '4':
        heavenly()
    elif option == 'back':
        start1()
    else:
        print("That's not a choice!")
        dungeon()
 
 
def ifight():
    global enemy
 
    enemy = random.choice((PigIG, GolemIG, WolfIG, TrollIG, GolgothIG, GoldPigIG))        
    dunfight()

def ffight():
    global enemy
 
    enemy = random.choice((RoastedPigIG, GolemIG, WolfIG, TrollIG, PhoenixIG, DragonIG, FiendIG, GoldPigIG))        
    dunfight()

def efight():
    global enemy
 
    enemy = random.choice((SatyrIG, PigIG, GolemIG, WolfIG, TrollIG, PanIG, GoldPigIG))        
    dunfight()

def hfight():
    global enemy
 
    enemy = random.choice((FlyingPigIG, GolemIG, FlyingWolfIG, ImpIG, GodIG, GoldPigIG))        
    dunfight()
 
def dunfight():
    print("%s  VS  %s" % (PlayerIG.name, enemy.name))
    print("%s's Health: %d/%d" % (PlayerIG.name, PlayerIG.health, PlayerIG.maxhealth))
    print("%s's Health: %i/%i" % (enemy.name, enemy.health, enemy.maxhealth))
    print("Potions: %i\n" % PlayerIG.pot)    
    print("1. Attack")
    print("2. Potion")
    print("3. Run")
    option = input("> ")
 
    if option == '1':
        attack()
    elif option == '2':
        drinkpot()
    elif option == '3':
        run1()
    else:
        fight()
 
def run1():
    runnum = random.randint(1, 3)
    if runnum == 1:
        print("You have Successfully ran away!")
        option = input(' ')
        dungeon()
    else:
        print("You failed to get away!")
        option = input(' ')
        Eattack = random.randint(0, enemy.attack)
        if Eattack <= 0:
            print("The enemy missed!")
        else:
            PlayerIG.health -= Eattack
            print("The enemy dealt %i damage!" % Eattack)
        option = input(' ')
        if PlayerIG.health <= 0:
            die()
        else:
            dunfight()
 
 
 
 
 
 
def ice():
    print("Brrr.... It's cold in here!")
    option = input(' ')
    print("%s says: Who even lives here?!" % PlayerIG.name)
    option = input(' ')
    print("*BOOM*")
    time.sleep(3)
    print("%s Who goes there?" % PlayerIG.name)
    option = input(' ')
    ifight()
def fire():
    print("Whew! So Hot!")
    option = input(' ')
    print("%s says: Why am I even here?!" % PlayerIG.name)
    option = input(' ')
    print("*BOOM*")
    time.sleep(3)
    print("%s Who goes there?" % PlayerIG.name)
    option = input(' ')
    ffight()
 
def earth():
    print("It's so smelly in here!")
    option = input(' ')
    print("%s says: The walls are all cracked!" % PlayerIG.name)
    option = input(' ')
    print("*BOOM*")
    time.sleep(3)
    print("%s Who goes there?" % PlayerIG.name)
    option = input(' ')
    efight()

def heavenly():
    print("It's so bright!")
    option = input(' ')
    print("%s says: Ah! My eyes!!!" % PlayerIG.name)
    option = input(' ')
    print("*BOOM*")
    time.sleep(3)
    print("%s Who goes there?" % PlayerIG.name)
    option = input(' ')
    hfight()
 
 
def uplvl():
    lvlNext = 25
    if PlayerIG.xp >= lvlNext:
        PlayerIG.lvl += 1
        PlayerIG.maxhealth += 5
        PlayerIG.health = PlayerIG.maxhealth
        PlayerIG.base_attack += 5
        PlayerIG.xp = PlayerIG.xp - lvlNext
        lvlNext = round(lvlNext * 1.5)
        print("You have leveled up to Level %i" % PlayerIG.lvl)
        option = input(' ')
       
 
 
    else:
        pass
           
 
       
 
   
           
           
   
   
   
       
       
       
   
   
       
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
main()


